#!/bin/bash

# Stuff that might be good to abstract out for a user to configure.
percentageOfRamToUse=80
device=zram0

function findDeviceConfig
{
  for possibleConfig in "/sys/deviceConfigs/virtual/block/$device" "/sys/devices/virtual/block/$device"
  do
    if [ -e "$possibleConfig" ]; then
      echo "$possibleConfig"
    fi
  done
}

# Find the config.
deviceConfig="$(findDeviceConfig | head -n1)"

# Figure out the settings that we should use.
totalMemory="$(free -m | grep Mem: | awk '{print $2}')"
let maxPhysicalUsage=$totalMemory*$percentageOfRamToUse/100
let virtualSize=$maxPhysicalUsage*2
let uncompressedMemory=$totalMemory-$maxPhysicalUsage
let totalPossible=$uncompressedMemory+$virtualSize

coresAvailable="$(lscpu | grep '^Core(s) per socket:' | awk '{print $4}')"
let coresToUse=$coresAvailable-1

# Display what we have figured out.
echo "Config
  % of memory to use  $percentageOfRamToUse
  device config       $deviceConfig

Memory (MB)
  total               $totalMemory
  maxPhysicalUsage    $maxPhysicalUsage
  virtualSize         $virtualSize
  uncompressed        $uncompressedMemory
  ---
  totalPossible       $totalPossible

CPU
  coresAvailable      $coresAvailable
  coresToUse          $coresToUse"

# Apply it.
swapoff -a

if ! lsmod | grep -q zram; then
  echo "zram module isn't loaded. Loading it."
  modprobe zram
fi

echo "$coresToUse" > "$deviceConfig/max_comp_streams"
echo "lz4" > "$deviceConfig/comp_algorithm"
echo "${maxPhysicalUsage}M" > "$deviceConfig/mem_limit"
echo "${virtualSize}M" > "$deviceConfig/disksize"

mkswap /dev/zram0
swapon -p 0 /dev/zram0
sysctl vm.swappiness=70

